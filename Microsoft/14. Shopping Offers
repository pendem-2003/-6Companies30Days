class Solution {
public:
    int n;
    vector<int> pr;
    vector<vector<int>> sp;
    map<vector<int>, int> mp;
    int solve(vector<int> &needs){
        if (mp[needs]>0)return mp[needs];
        int ans = 0;
        for (int i=0;i<n;i++)ans += needs[i]*pr[i];
        for (auto it : sp){
            vector<int> v = needs;
            int f = 0;
            for (int i=0;i<n;i++){
                v[i] -= it[i];
                if (v[i]<0){
                    f = 1;
                    break;
                }
            }
            if (f==1)continue;
            ans = min(ans,it[n] + solve(v));
        }
        return mp[needs] = ans;
    }
    int shoppingOffers(vector<int>& price, vector<vector<int>>& special, vector<int>& needs) {
        n = needs.size();
        pr = price;
        sp = special;
        return solve(needs);
    }
};
