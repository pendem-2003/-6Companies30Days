class Solution {
public:
    int dx[4] = {1,-1,0,0};
    int dy[4] = {0,0,1,-1};
    vector<vector<int>> highestPeak(vector<vector<int>>& arr) {
        queue<pair<int,int>> q;
        int n = arr.size();
        int m = arr[0].size();
        for (int i=0;i<n;i++){
            for (int j=0;j<m;j++){
                if (arr[i][j] == 1){
                    arr[i][j] = 0;
                    q.push({i,j});
                }
                else arr[i][j] = -1;
            }
        }
        while (!q.empty()){
            auto it = q.front();
            q.pop();
            int x = it.first;
            int y = it.second;
            for (int i=0;i<4;i++){
                int x1 = x + dx[i];
                int y1 = y + dy[i];
                if (x1 >=0 && x1<n && y1>=0 && y1<m && arr[x1][y1]==-1){
                    arr[x1][y1] = arr[x][y] + 1;
                    q.push({x1,y1});
                }
            }
        }
        return arr;
    }
};
