//Solution 1
class Solution {
public:
    vector<string> ans;
    string temp;
    int n;
    string s;
    void rec(int id){
        if (id==n){
            ans.push_back(temp);
            return;
        }
        int x = s[id] - '2';
        if (x<=5){
            x *= 3;
            char c = 'a' + x;
            for (int i=0;i<3;i++){
                temp += c;
                rec(id+1);
                temp.pop_back();
                c++;
            }
            if ((x/3)==5){
                temp += c;
                rec(id+1);
                temp.pop_back();
            }
        }
        else {
            if (x==6){
                char c = 't';
                for (int i=0;i<3;i++){
                temp += c;
                rec(id+1);
                temp.pop_back();
                c++;
            }
            }
            else {
                char c = 'w';
                for (int i=0;i<4;i++){
                temp += c;
                rec(id+1);
                temp.pop_back();
                c++;
            }
            }
        }
    }
    vector<string> letterCombinations(string d) {
        s = d;
        n = s.length();
        if (n==0){
            return ans;
        }
        rec(0);
        return ans;
    }
};

//Solution2 
class Solution {
public:
    vector<string> ans;
    string temp;
    int n;
    string s;
    map<int,string> mp;
    void rec(int id){
        if (id==n){
            ans.push_back(temp);
            return;
        }
        int x = s[id] - '0';
        string s1 = mp[x];
        for (auto it : s1){
            temp += it;
            rec(id+1);
            temp.pop_back();
        }
    }
    vector<string> letterCombinations(string d) {
        mp[2] = "abc";
    mp[3] = "def";
    mp[4] = "ghi";
    mp[5] = "jkl";
    mp[6] = "mno";
    mp[7] = "pqrs";
    mp[8] = "tuv";
    mp[9] = "wxyz";
        s = d;
        n = s.length();
        if (n==0){
            return ans;
        }
        rec(0);
        return ans;
    }
};
