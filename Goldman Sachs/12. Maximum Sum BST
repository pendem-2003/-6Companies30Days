/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int maxi = 1e9;
    int mini = -1e9;
    vector<int> rec1(TreeNode *root, int sum){
        if (root==NULL){
            return {mini,maxi,0};
        }
        vector<int> l(rec1(root->left,sum)), r(rec1(root->right,sum));
        if (l.empty() || r.empty() || root->val>=r[1] || root->val<=l[0])return {};
        ans = max(ans,l[2]+r[2]+root->val);
        return {max(root->val,r[0]),min(root->val,l[1]),l[2]+r[2]+root->val};
    }
    int maxSumBST(TreeNode* root) {
        rec1(root,0);
        return ans;
    }
};
