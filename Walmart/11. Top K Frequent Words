#define pii pair<int,string>
class Solution {
public:
    class comp{
    public:
        bool operator()(pii below, pii above){
            if (below.first>above.first)return true;
            else if ((below.first == above.first) && (below.second<above.second))return true;
            else return false;
        }
    };
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string, int> mp;
        for (auto it : words)mp[it]++;
        priority_queue<pii,vector<pii>,comp> pq;
        for (auto it : mp){
            pq.push({it.second,it.first});
            if (pq.size()>k)pq.pop();
        }
        vector<string> ans;
        while (!pq.empty()){
            auto it = pq.top();
            ans.push_back(it.second);
            pq.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
